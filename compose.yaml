services:
  rabbit:
    image: rabbitmq
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
      - "61613:61613"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    command: |
      bash -c "
        rabbitmq-plugins enable rabbitmq_management rabbitmq_stomp rabbitmq_web_stomp &&
        rabbitmq-server"
  backend:
    container_name: backend
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - DB_URL=jdbc:postgresql://db:5432/femboy_db
      - DB_USERNAME=postgres
      - DB_PASSWORD=passwordpasswd
      - DB_TOKEN=eioquweoqwiueqwoieqweuoqweiuqweoiqwueqweoiqwueqwoeiuqweoqiwewqoieuqwoeiqwueqoeiqioeuqwieqioweuoiqweoiuqwoiueqwouieoiquweoiuwqeouiqweouiqwuoieqwiuoeqwiuoeiuqoweouiqwoeuiqwiuoeqwuioeq
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - STOMP_PORT=61613
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres
    container_name: db
    restart: unless-stopped
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=femboy_db
      - POSTGRES_PASSWORD=passwordpasswd
    expose:
      - 5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-U", "postgres", "-d", "femboy_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  db-data:
